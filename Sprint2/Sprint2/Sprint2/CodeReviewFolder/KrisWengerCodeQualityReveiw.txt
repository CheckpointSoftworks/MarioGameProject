Author of the code review: Kris Wenger
Date of the code review: 12/6/15
Sprint number: 6
Name of the .cs file being reviewed: PlayerStatManager
Author of the .cs file being reviewed: Matthew Mohr
Specific comments on code quality:
	The class is quite percise in its variable naming conventions, except for maybe sw as a variable for stream writer.
	However it makes sense slso since it is for stream writer.  In terms of maintainability,
	the class seems to be able to easily take different stats and display them.  Adding a 
	new type of stats item seems like it could easily be done, just decalre a new private property for the class
	and have it corrspond to a new stats item.  This item then could be tracked and increased as other the stats are.
	In terms of	dependencies the player stats has a few since it is dependent on a few concrete classes instead of a type of 
	interface.	In terms of cohesion the PlayerStatsManager I would say has high cohesion becuase it is perfroming
	only tasks relating to stats, increasing the various stats and then displaying them or writing them to a file.  
	In terms of coupling as stated above the class has a few dependencies, so I would also say 
	that the PlayerStatsManager has loose or medium coupling.  Overall, I believe this class has high cohesion
	and loose or medium coupling.