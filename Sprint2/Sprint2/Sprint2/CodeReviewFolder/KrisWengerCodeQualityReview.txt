Author of the code review: Kris Wenger
Date of the code review: 9/27/15
Sprint number: 2
Name of the .cs file being reviewed:FireFlowerSprite.cs
Author of the .cs file being reviewed: Jonathan Miller
Specific comments on code quality:
	The code is still easy to read and understand, some variable names are even clearer now than before.
	In terms of maintainablity if the item being created and printed inside the class were to change, then
	it should still work.  The code avoids many magic numbers escpically when doing draw calculations.
	However, there are still a few magic numbers relating to the frames of the item.  For this sprint
	it should be fine for a few reasons, one being that items are not animated in this sprint, another
	being for now magic numbers are fine.  However, the magic numbers would make it harder to make
	a change to the class, say instead of loading a fireflower we loaded the coin or star.  While it may
	be that they have the same number of frames, the assumption could prove to be wrong.  However, using the
	class to load the other version of the fire flower, the underground version, would be quite simple.  Just
	chane the method calling createFireFlowerSpriteSheet to be like createUndergroundFireFlowerSpriteSheet,
	making the assumption said method is declared and avaliable to use.  The class is truly only dependent on
	the interface it implments and the itemTextureStorage, which I believe the class has low coupling.  The only
	dependent which may break this is the need for a spriteBatch to be sent into the draw method, however I do not
	know of way to avoid this needed dependency.  In terms of cohesion I believe everything the class uses is needed
	for the class, the interface it implments makes sense, the use of the texture storage gives not only added
	abstraction but also the ability to switch the loaded texture much more easily.  The need on spritebatch agian
	is needed in order draw the item.  So I believe the code has a degree of high cohesion, becuase it makes sense,
	with everything it uses.